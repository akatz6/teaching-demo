Ice breaker
    Name and useless superpower you want
    My name is Aaron and I want the ability to raise or lower the 
    temperature of a room by two degrees

Lesson
    Flex box in css and if time grid system. 
    I always prepare extra just in case.
    The finished lecture if on my github at https://github.com/akatz6/teaching-demo
    My teaching style is that I am going to show you a bunch or example that you can 
    use as a reference.

Set up
    Use ! to start html boilerplate code
    #container will create a div with an id of container
    .item*3 will create three divs with class of item
    Command D to select multiple elements that are the same
    Lorem2 with create Lorem text with two words
    Live Server is an extension on VS code to auto update the browser
    Command and space on Chrome and select inspect to give open developer tools

Sources
    Flex: https://css-tricks.com/snippets/css/a-guide-to-flexbox/  
    Grid: https://css-tricks.com/snippets/css/complete-guide-grid/

Flex box.
    I looooooooooove using flex box. 
    So far we have covered display:block and display:inline-block for 
    the children elements to display elements on the same row. We also covered
    using margin to put some space between the elements, but what looks good
    on a big screen looks funky on a phone.

    In developer tools you can play around with different sizes of screens.
    If you put a margin-left of 50px it might look good in one size but not
    great in another. On solution is to use '%' instead of 'px' but this 
    leads to a guessing game. There is a better way and that is flex box.

    Let's change the parent div from display:block to display:flex.
    What do you notice?

    First let's play around with flex-direction. In order to see the differences we need to make the
    blocks different colors. So let's see our options.

    Now we play around with flex-direction and my favorite flew-wrap.

    We can do some really cool stuff with spacing using flex box. 
    Justify-content: controls spacing along the x axis
    
    Align-items: controls spacing along the y axis. In order to see the change
    we need to make the container height larger than the children.
    
    Align-content: if you only want the text to be covered

    Gap: is a fun on because it gives you great control for spacing between the items

    Flex-grow: if you want a child to be larger than the others

    Align-self: This is if you want to change a specific child

    Two questions for you:
        1) How awesome is the flex box?
        2) Are you ready to play around with it?


